
# If section [kernel_params] is not specified all kernels default to
# type: exponentialQuadratic
# lengthscaleScale: 1.0
# lengthscaleValue: 1.0
#
# If section [kernel_params] is specified, and contains the item kTypeLatents,
# all kernels will be of type kTypeLatents.
#
# If kTypeLatents=exponentialQuadratic then 
#     - the item kLengthscaleValueLatents should specify the initial
#       value of all lengthscales (defaults to 1.0).
#
# If kTypeLatents=periodic then 
#     - the item kLengthscaleScaleLatents should specify the scale for the
#       lengthscale parameter of all latents (defaults to 1.0).
#     - the item kLengthscaleScaledValueLatents should specify the initial
#       value of all lengthscales (defaults to 1.0).
#     - the item kPeriodScaleLatents should specify the scale for the
#       period parameter of all latents (defaults to 1.0).
#     - the item kPeriodScaledValueLatents should specify the initial
#       value of the period parameter of all latents (defaults to 1.0).
#
# If section [kernel_params] is specified, and does not contains the item
# kTypeLatents, then for each latent this file should contain the item
# kTypeLatent<k> specifying the kernels type for latent <k>.
#
# If kTypeLatent<k>=exponentialQuadratic then 
#     - the item kLengthscaleScaleLatent<k> should specify the scale for the
#       lengthscale parameter of latent <k> (defaults to 1.0).
#     - the item kLengthscaleScaledValueLatent<k> should specify the initial
#       value of lengthscale <k> (defaults to 1.0).
#
# If kTypeLatent<k>=periodic then 
#     - the item kLengthscaleScaleLatent<k> should specify the scale for the
#       lengthscale parameter of latent <k> (defaults to 1.0).
#     - the item kLengthscaleScaledValueLatent<k> should specify the initial
#       value of lengthscale <k> (defaults to 1.0).
#     - the item kPeriodScaleLatent<k> should specify the scale for the
#       period parameter of latent <k> (defaults to 1.0).
#     - the item kPeriodScaledValueLatent<k> should specify the initial
#       value of the period parameters of latent <k> (defaults to 1.0).
#

[kernel_params]
kTypeLatents = exponentialQuadratic
kLengthscaleLatents = 2.0

# If section [indPoints_params] is not specified, for any trial and latent, the
# inducing points locations will be initialized with 10 equispaced values
# between the start and end of the trial, the inducing points mean will be
# initialized to zero, and the inducing point covariance to a diagonal matrix
# with a value of 1e-2 along the diagonal
#
# indPointsLocs: 10 equispaced values between the start and end of the trial
# indPointsMean: 0 vector
# indPointsCov: diagonal(1e-2)
#
# If section [indPoints_params] contains the items
#
# indPointsLocsLatentsTrials_filename=indPointsLocsFilename
# indPointsMeanLatentsTrials_filename=indPointsMeanFilename
# indPointsCovLatentsTrials_filename=indPointsCovFilename
#
# then the inducing points locations, means and covariances of all trials and
# latents will be initialized with the contents of the files
# indPointsLocsFilename, indPointsMeanFilename and indPointsCovFilename,
# respectively.
#
# If section [indPoints_params] does not contain items
# indPointsLocsLatentsTrials_filename, indPointsMeanLatentsTrials_filename,
# and indPointsCovLatentsTrials_filename, then it should contain items
#
# indPointsLocsLatent<k>Trial<r>_filename=indPointsLocsFilename_kr
# indPointsMeanLatent<k>Trial<r>_filename=indPointsMeanFilename_kr
# and indPointsCovLatent<k>Trial<r>_filename=indPointsCovFilename_kr
#
# and the inducing points locations, means and covariances for latent k and
# trial r will be initialized with the contents of the file
# indPointsLocsFilename_kr, indPointsMeanFilename_kr and
# indPointsCovFilename_kr, respectively.
#
[indPoints_params]
indPointsLocsLatentsTrials_filename = ../data/equispacedValuesBtw0and1_len09.csv

[variational_params]
variational_means_filename = ../data/uniform_0.00_1.00_len09.csv
variational_covs_filename = ../data/identity_scaled1e-2_09x09.csv

# If section [embedding_params] is not specified the values of C and d will be
# set to samples from a standard normal distribution.
#
# C: iid samples form N(0, 1)
# d: iid samples form N(0, 1)
#
# If section [embedding_params] is specified then it should contain items
#
# C_filename = a_C_filename
# d_filename = a_d_filename
#
# and the embedding matrix C and vector d will be initialized with the contents
# of file a_C_filename and a_d_filename, respectively. Thse files should be in
# csv format readable by pandas.read_csv.

[embedding_params]
C_filename = ../data/C_constant_1.00constant_100neurons_02latents.csv
d_filename = ../data/d_constant_0.00constant_100neurons.csv

# Options for section [optim_params]:
# em_method: EM | mECM (method to do expectation maximization)
# em_max_iter: <int> (maximum number of EM iterations)
#
# For each svGPFA step (estep, mstep_embedding, mstep_kernels,
# mstep_indpointslocs) we can specify the following options
# <step>_estimate: True | False (indicates whether to perform or not the given step)
# <step>_max_iter: <int> (number of iteration of the step in an EM iteration)
# <step>_lr: <float> (learning rate param for torch.optim.LBFGS)
# <step>_tolerance_grad: <float> (tolerance_grad param for torch.optim.LBFGS)
# <step>_tolerance_change: <float> (tolerance_change param for torch.optim.LBFGS)
# <step>_line_search_fin: <float> (line_search_fin param for torch.optim.LBFGS)
#
# verbose: True | False (verbose or quiet output)
#
# Defaults:
#
# em_method = EM
# em_max_iter = 200
# #
# estep_estimate = True
# estep_max_iter = 20
# estep_lr = 1.0
# estep_tolerance_grad = 1e-7
# estep_tolerance_change = 1e-9
# estep_line_search_fn = strong_wolfe
# #
# mstep_embedding_estimate = True
# mstep_embedding_max_iter = 20
# mstep_embedding_lr = 1.0
# mstep_embedding_tolerance_grad = 1e-7
# mstep_embedding_tolerance_change = 1e-9
# mstep_embedding_line_search_fn = strong_wolfe
# #
# mstep_kernels_estimate = True
# mstep_kernels_max_iter = 20
# mstep_kernels_lr = 1.0
# mstep_kernels_tolerance_grad = 1e-7
# mstep_kernels_tolerance_change = 1e-9
# mstep_kernels_line_search_fn = strong_wolfe
# #
# mstep_indpointslocs_estimate = True
# mstep_indpointslocs_max_iter = 20
# mstep_indpointslocs_lr = 1.0
# mstep_indpointslocs_tolerance_grad = 1e-7
# mstep_indpointslocs_tolerance_change = 1e-9
# mstep_indpointslocs_line_search_fn = strong_wolfe
# #
# verbose = True

[optim_params]
em_method = EM
em_max_iter = 200
#
estep_estimate = True
estep_max_iter = 20
estep_lr = 1.0
estep_tolerance_grad = 1e-7
estep_tolerance_change = 1e-9
estep_line_search_fn = strong_wolfe
#
mstep_embedding_estimate = True
mstep_embedding_max_iter = 20
mstep_embedding_lr = 1.0
mstep_embedding_tolerance_grad = 1e-7
mstep_embedding_tolerance_change = 1e-9
mstep_embedding_line_search_fn = strong_wolfe
#
mstep_kernels_estimate = True
mstep_kernels_max_iter = 20
mstep_kernels_lr = 1.0
mstep_kernels_tolerance_grad = 1e-7
mstep_kernels_tolerance_change = 1e-9
mstep_kernels_line_search_fn = strong_wolfe
#
mstep_indpointslocs_estimate = True
mstep_indpointslocs_max_iter = 20
mstep_indpointslocs_lr = 1.0
mstep_indpointslocs_tolerance_grad = 1e-7
mstep_indpointslocs_tolerance_change = 1e-9
mstep_indpointslocs_line_search_fn = strong_wolfe
#
verbose = True

# section [misc_params] includes miscellaneous parameters
#
# priorCovRegParam: regularization value added to the prior covariance matrix
#                   to avoid numerical problems when inverting it (default 1e-5)
# nQuad:            number of quadrature points use for the evaluation of the
#                   integral in the first term of Eq. 7 in Duncker and Sahani,
#                   2018 (default 200)

[misc_params]
priorCovRegParam = 1e-5
nQuad = 200
